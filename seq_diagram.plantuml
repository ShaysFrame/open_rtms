@startuml a

skinparam backgroundColor White
skinparam sequence {
	ActorBackgroundColor SkyBlue
	ParticipantBackgroundColor SkyBlue
	LifeLineBorderColor Black
	LifeLineBackgroundColor SkyBlue
	ArrowColor Black
	BoxBackgroundColor SkyBlue
}

actor User
participant "Flutter App" as App
participant "Django API" as API
participant "ML Model/DB" as MLDB

User -> App : Enter student info / select photo
App -> API : POST /api/register/ (student info + photo)
API -> MLDB : Validate & store student, process image
MLDB --> API : Detection/recognition result, DB update
API --> App : Registration result (success/failure)
App --> User : Show result (success/error message)

User -> App : Upload image for recognition
App -> API : POST /api/recognize/ (image)
API -> MLDB : Detect/recognize faces
MLDB --> API : Recognition results
API --> App : Recognition results (JSON)
App --> User : Show recognized students/attendance
@enduml

@startuml aa

skinparam backgroundColor White
skinparam sequence {
    ActorBackgroundColor SkyBlue
    ParticipantBackgroundColor SkyBlue
    LifeLineBorderColor Black
    LifeLineBackgroundColor SkyBlue
    ArrowColor Black
    BoxBackgroundColor SkyBlue
}

actor User
participant "Flutter App" as App
participant "Camera Feed" as Camera
participant "Django API" as API
participant "ML Model/DB" as MLDB

User -> App : Enter student info / select photo
App -> API : POST /api/register/ (student info + photo)
API -> MLDB : Validate & store student, process image
MLDB --> API : Detection/recognition result, DB update
API --> App : Registration result (success/failure)
App --> User : Show result (success/error message)

User -> App : Upload image for recognition
App -> API : POST /api/recognize/ (image)
API -> MLDB : Detect/recognize faces
MLDB --> API : Recognition results
API --> App : Recognition results (JSON)
App --> User : Show recognized students/attendance

note over User, MLDB
  Live Camera Attendance Flow
end note

User -> App : Open camera for attendance
activate App
App -> Camera : Initialize camera
activate Camera
Camera --> App : Camera ready
App --> User : Show live camera preview

loop Every frame while camera is active
    Camera -> App : Frame from camera feed
    App -> App : Detect faces locally (ML Kit)
    
    alt Face(s) detected
        App -> API : POST /api/recognize/ (face image)
        API -> MLDB : Process face for recognition
        MLDB --> API : Recognition result
        API --> App : Student identification
        App -> App : Update attendance UI
        App --> User : Highlight recognized student
    end
end

User -> App : Stop attendance session
App -> Camera : Stop camera
deactivate Camera
App -> App : Finalize attendance data
App --> User : Show attendance summary
deactivate App

@enduml